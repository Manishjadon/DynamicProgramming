#include<bits/stdc++.h> 
using namespace std;  
long int mod=1000000007;
long int solve(vector<long int> vp,long int x)
{   
    long  int n,i,j;  
    n=vp.size();
    long long int dp[n+1][x+1];  
    for(i=0;i<=n;i++)
    {  
        dp[i][0]=1;  
    }  
    for(i=1;i<=x;i++)
    {  
        dp[0][i]=0;  
    }  
    for(i=1;i<=n;i++)
    { 
        for(j=1;j<=x;j++)
        {  
            if(vp[i-1]<=j)
            {  
                dp[i][j]=(dp[i-1][j-vp[i-1]]+dp[i-1][j])%mod;  
            } 
            else 
            {  
                dp[i][j]=dp[i-1][j];  
            }  
        }  
    }   
    return dp[n][x];
}
main()  
{  
    long int t=1,i,n,x;   
    vector<long int > vp;
    while(t--)
    {
    cin>>n;    
    x=((n%mod)*((n+1)%mod))%mod;   
    if(x%4!=0)
    {  
        cout<<0;  
    }  
    else 
    {
    x=x/4;
    for(i=0;i<n;i++)
    {  
        vp.push_back(i+1);  
    }  
      cout<<((solve(vp,x)*(500000004)))%mod;  
    }
    }  
}
